head	1.4;
access;
symbols;
locks;
comment	@# @;


1.4
date	2016.06.02.23.00.22;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.12.03.21.22.58;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.09.21.02.23.27;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.09.16.01.50.16;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// $Id: 20-fib-array.oc,v 1.3 2012-12-03 13:22:58-08 - - $
//
// Put Fibonacci numbers in an array, then print them.
//

#include "oclib.oh"

#define FIB_SIZE 30
int[] fibonacci = new int[FIB_SIZE];

fibonacci[0] = 0;
fibonacci[1] = 1;

int index = 2;
while (index < FIB_SIZE) {
   fibonacci[index] = fibonacci[index - 1] + fibonacci[index - 2];
   index = index + 1;
}

index = 0;
puts ("Numeri di figlio Bonacci\n");
while (index < FIB_SIZE) {
   puts ("fibonacci[");
   puti (index);
   puts ("] = ");
   puti (fibonacci[index]);
   endl ();
   index = index + 1;
}
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.2 2011-09-20 19:23:27-07 - - $
d25 1
a25 1
   puts (" = ");
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.1 2011-09-15 18:50:16-07 - - $
d6 2
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: 20-fib-array.oc,v 1.1 2011-09-15 15:30:10-07 - - $
d6 2
a7 1
int[] fibonacci = new int[30];
d13 1
a13 1
while (index < fibonacci.size) {
d20 1
a20 1
while (index < fibonacci.size) {
@
