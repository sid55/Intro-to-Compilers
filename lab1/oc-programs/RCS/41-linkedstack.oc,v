head	1.7;
access;
symbols;
locks;
comment	@# @;


1.7
date	2012.12.03.21.24.26;	author -;	state -;
branches;
next	1.6;

1.6
date	2012.12.03.21.16.12;	author -;	state -;
branches;
next	1.5;

1.5
date	2012.11.26.20.49.23;	author -;	state -;
branches;
next	1.4;

1.4
date	2011.10.29.01.24.19;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.09.26.21.22.22;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.09.21.02.23.27;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.09.16.01.50.16;	author -;	state -;
branches;
next	;


desc
@@


1.7
log
@-
@
text
@// $Id: 41-linkedstack.oc,v 1.6 2012-12-03 13:16:12-08 - - $

#include "oclib.oh"

struct node {
   string data;
   node link;
}

struct stack {
   node top;
}

bool empty (stack stack) {
   assert (stack != null);
   return stack.top == null;
}

stack new_stack () {
   stack stack = new stack ();
   stack.top = null;
   return stack;
}

void push (stack stack, string str) {
   assert (stack != null);
   node tmp = new node ();
   tmp.data = str;
   tmp.link = stack.top;
   stack.top = tmp;
}

string pop (stack stack) {
   assert (stack != null);
   assert (! empty (stack));
   string tmp = stack.top.data;
   stack.top = stack.top.link;
   return tmp;
}

// Main program.

string[] argv = getargv ();
stack stack = new_stack ();
int argi = 0;

while (argv[argi] != null) {
   push (stack, argv[argi]);
   argi = argi + 1;
}

while (! empty (stack)) {
   puts (pop (stack));
   endl ();
}

@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: 41-linkedstack.oc,v 1.5 2012-11-26 12:49:23-08 - - $
d19 1
a19 1
stack new_stack (int size) {
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: 41-linkedstack.oc,v 1.4 2011-10-28 18:24:19-07 - - $
d14 5
a40 5
bool empty (stack stack) {
   assert (stack != null);
   return stack.top == null;
}

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: 41-linkedstack.oc,v 1.3 2011-09-26 14:22:22-07 - - $
a4 4
struct stack {
   node top;
}

d10 4
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: 41-linkedstack.oc,v 1.2 2011-09-20 19:23:27-07 - - $
d52 1
a52 1
while (! empty (stack) {
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: 41-linkedstack.oc,v 1.1 2011-09-15 18:50:16-07 - - $
d43 1
a43 1
string[] oc_argv = argv ();
d47 2
a48 2
while (argi < oc_argv.size) {
   push (stack, oc_argv[argi]);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: 41-linkedstack.oc,v 1.2 2011-09-15 18:45:15-07 - - $
d15 3
a17 3
   stack stack_ = new stack ();
   stack_.top = null;
   return stack_;
d20 2
a21 2
void push (stack stack_, string str) {
   assert (stack_ != null);
d24 2
a25 2
   tmp.link = stack_.top;
   stack_.top = tmp;
d28 5
a32 5
string pop (stack stack_) {
   assert (stack_ != null);
   assert (! empty (stack_));
   string tmp = stack_.top.data;
   stack_.top = stack_.top.link;
d36 3
a38 3
bool empty (stack stack_) {
   assert (stack_ != null);
   return stack_.top == null;
d44 1
a44 1
stack stack_ = new_stack ();
d48 1
a48 1
   push (stack_, oc_argv[argi]);
d52 2
a53 2
while (! empty (stack_) {
   puts (pop (stack_));
@
